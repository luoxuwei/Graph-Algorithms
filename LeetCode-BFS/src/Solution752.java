import java.util.HashSet;
import java.util.LinkedList;
import java.util.TreeMap;

public class Solution752 {
    int[][] dirs;
    int[] a;

    public int openLock(String[] deadends, String target) {
        int targetInt = Integer.parseInt(target);
        a = new int[]{-1, 1};
        dirs = new int[4 * 2][4];
        LinkedList<Integer> queue = new LinkedList<>();

        TreeMap<Integer, Integer> validate = new TreeMap<>();
        int d = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 2; j++) {
                dirs[d][i] = a[j];
                d++;
            }
        }
        HashSet<Integer> deadendsInt = new HashSet<>();
        int base = 1;
        for (int ds = 0; ds < deadends.length; ds++) {
            deadendsInt.add(Integer.parseInt(deadends[ds]));
        }

        int nextA = 0; int nextB = 0; int nextC = 0; int nextD = 0;
        int max = 9999 - deadendsInt.size();
        int next;
        int temp;
        int cur = 0;
        if (!deadendsInt.contains(0)) {
            queue.addLast(0);
            validate.put(cur, 0);
        }

        while (!queue.isEmpty()) {
            cur = queue.removeFirst();
            next = 0;
            for (int i = 0; i < dirs.length; i ++) {
                temp = cur;
                 nextA = temp/1000 + dirs[i][0];
                 if (nextA < 0) {
                     nextA = 9;
                 } else if (nextA > 9) {
                     nextA = 0;
                 }
                 next = nextA *1000;
                temp = temp - (temp/1000) * 1000;
                 nextB = temp/100 + dirs[i][1];
                if (nextB < 0) {
                    nextB = 9;
                } else if (nextB > 9) {
                    nextB = 0;
                }
                next = next + nextB * 100;
                temp = temp - (temp/100)*100;
                 nextC = temp/10 + dirs[i][2];
                if (nextC < 0) {
                    nextC = 9;
                } else if (nextC > 9) {
                    nextC = 0;
                }
                next = next + nextC * 10;
                temp = temp - (temp/10)*10;
                 nextD = temp + dirs[i][3];
                if (nextD < 0) {
                    nextD = 9;
                } else if (nextD > 9) {
                    nextD = 0;
                }
                next = next + nextD;
                if (!deadendsInt.contains(next) && !validate.containsKey(next)) {
                    queue.addLast(next);
                    validate.put(next, validate.get(cur) + 1);
                    if (next == targetInt) {
                        return validate.get(next);
                    }
                    if (validate.keySet().size() == max) {
                        return -1;
                    }
                }
            }
        }
        return -1;
    }

    public static void main(String[] args) {
//        Solution752 solution752 = new Solution752();
//        System.out.println(solution752.openLock(new String[]{"0201","0101","0102","1212","2002"}, "0202"));
//        Solution752 solution752 = new Solution752();
//        System.out.println(solution752.openLock(new String[]{"0000"}, "8888"));

        Solution752 solution752 = new Solution752();
        System.out.println(solution752.openLock(new String[]{"7867","6676","8687","7886","6768","8877","6767","6676","6666","7876","6688","6677","6877","7786","6778","6868","6868","7867","7668","7666","8868","7887","6788","7687","7788","7877","6867","6867","7876","8787","8878","6668","6878","6766","8667","8688","6788","7687","8887","8766","6867","8867","7866","7866","6686","7776","8687","7888","6777","6678","6678","6686","6677","7886","6876","8666","6667","7768","7688","7668","6786","7766","7867","8866","7887","6676","8776","6867","8888","6678","8687","6868","7888","8666","6678","6668","7678","7667","8786","8768","6766","8776","8677","7788","7868","7878","6786","6678","6876","7667","8866","8666","8768","8886","8787","8688","8766","8867","7886","6876","7776","7867","8668","7777","8888","7767","8778","8888","6876","8777","7877","8866","8668","8878","7678","8787","7788","8887","8667","7887","6686","8778","7768","8787","7677","6768","7877","7788","7768","6768","6786","7887","7768","6676","6777","8686","7867","8788","8887","8776","7677","8786","8678","7666","8776","7676","6767","8776","8888","8766","8876","7777","7677","6767","7878","7868","8677","7677","8788","6667","8866","8887","6686","6777","6676","8787","6788","8866","6767","8676","8868","8768","8888","7866","7877","7768","7686","7888","6666","6887","6787","7667","6676","8666","8886","8878","8678","8868","8888","8867","7878","7787","8776","7877","6788","8778","6768","8677","8678","6778","7888","6866","6768","6666","6887","8866","7676","7866","7876","7678","7686","8887","7676","6788","8787","6666","8866","6876","8676","8688","8887","7887","7777","8887","8688","6668","6686","6887","7677","6867","6786","6877","7788","6667","8778","8786","8767","7778","8867","8877","6668","8886","7888","7767","7666","8678","8668","8767","7666","6787","6886","8787","6886","8768","8767","8676","6767","8776","8768","8687","8778","7888","6768","7878","6668","7688","6687","7866","8878","6877","7667","8886","7876","6667","8877","7666","7668","7676","6888","6686","7666","7688","7666","6678","6676","7678","8788","7667","7767","8766","6867","8767","8676","8786","8667","6678","6778","8877","8788","6866","7687","6876","8878","8866","6788","6877","8768","8778","8778","8866","7866","7887","7878","8766","8778","7868","8787","6676","8668","7866","8787","8767","6876","8867","6688","6886","6668","6878","7866","8678","8867","7667","7878","8778","8777","7866","8878","7868","6876","7688","7677","7678","7777","8888","8776","8688","6878","8877","7678","7777","7878","6678","6688","6868","8876","6668","8877","8786","6688","8766","8887","6678","8886","8876","8888","8878","6786","7686","7867","7767","7888","8866","6876","7767","6687","6687","6688","6868","8668","6886","8686","7766","8777","8667","8886","7676","7768","6788","8688","7676","7686","8777","7886","7788","6666","7687","6676","6777","6866","6767","7787","7877","6777","6886","7877","7787","7787","8768","7787","8778","6766","7677","6788","6786","6767","8687","6687","8668","6876","6666","7676","8667","6688","6766","6677","7667","8668","8866","7686","8866","8687","8866","8768","7886","6877","8877","6676","6887","6788","8877","8887","8886","8887","6676","8867","6867","7768","8868","6668","7878","7887","8768","6876","7787","7876","8886","6778","7778","7687","6686","7787","8767","8668","7686","7678","8788","6687","8666","7877","6668","7686","6866","6888","8786","7778","7786","8787","6777","6867","7787","7777","6766","8666","6778","6867","8668","8667","7678","8668","7677","8787","6876","6668","7788","7688","7687","8778","8787","8688","8867"}, "6776"));
    }
}
